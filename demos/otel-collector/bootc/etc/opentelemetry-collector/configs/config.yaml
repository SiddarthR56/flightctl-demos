receivers:
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
      load:
      memory:
      network:
      paging:
      processes:
      process:
        mute_process_name_error: true
        mute_process_exe_error: true
        mute_process_io_error: true
        mute_process_user_error: true
        mute_process_cgroup_error: true
        metrics:
          process.cpu.utilization:
            enabled: true
          process.memory.utilization:
            enabled: true
  hostmetrics/disk:
    collection_interval: 1m
    scrapers:
      disk:
      filesystem:

  journald:
    units:
      - flightctl-agent.service
    priority: info
      
exporters:
  otlphttp:
    endpoint: https://otlp-http-otel-route-flightctl-observability.apps.demo.ecoeng-flightctl.devcluster.openshift.com
    tls:
      insecure: false
      ca_file: /etc/opentelemetry-collector/certs/ca.crt
      cert_file: /etc/opentelemetry-collector/certs/client.crt
      key_file: /etc/opentelemetry-collector/certs/client.key
  debug:
    verbosity: detailed

processors:
  batch: {}
  # The prometheus OTLP ingestion does not add resource attributes by default
  # See coo-prometheus.yaml how to enable ingestion of resource attributes
  # See https://opentelemetry.io/docs/specs/semconv/resource/device/ which attributes are expected
  resource:
    attributes:
    - action: insert
      key: device
      value: device001
  attributes:
    - action: insert
      key: device
      value: device001
  memory_limiter:
    check_interval: 10s
    limit_percentage: 5
    spike_limit_percentage: 1

service:
  pipelines:
    metrics:
      receivers: [hostmetrics,hostmetrics/disk]
      processors: [memory_limiter, resource, batch]
      exporters: [debug, otlphttp]
    logs:
      receivers: [journald]
      processors: [memory_limiter, resource, batch]
      exporters: [debug, otlphttp]
